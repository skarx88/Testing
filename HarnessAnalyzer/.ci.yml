# Disable parallel ci-builds because of the VectorDraw Authorize/UnAuthorize Issue (#1): only one auth-at-once currently allowed to avoid abuse-logic from VectorDraw
max_jobs: 1
# HINT: set +x = Deactive debug console output; set -x = Activate debug console output
# EAZFUSCATOR: how to use licensing for Eazfuscator: https://learn.gapotchenko.com/eazfuscator.net/docs/deployment/nuget-package-manager
environment:
    docker_image: ulm-dev.zuken.com/ci-build-image:VS2022
    #ci_fail_report_email: $COMMIT_USER_EMAIL
    default_version: 0.0.0-alpha.0
    version: ${REPO_RELEASE_NAME:-"$(default_version)"}
    job_name: CI-Build
    solution_file: ./Solution/Setup.Bundle/Setup.Bundle.sln
    license_file: ./Solution/E3.HarnessAnalyzer/license.dat
    bin_folder: ./Solution/E3.HarnessAnalyzer/bin
    setup_bundle_bin_folder: ./Solution/Setup.Bundle/bin
    setup_bin_folder: ./Solution/Setup/bin
    deploy_nuget_target: https://ulm-nuget.zuken.com/
    secure_serialVDraw11: fcw2r5TCI4BweLKTBuUFwFcdy7/Ce88IYwNi9buhes90kIdc9w3HZGTOKBcafrbau3ZCvYhbq54UW6xG4obpCczXAqqroFVrQCtr4YFFGg9yI+ke4aqhelmLxr5fj4Klute9+Ha0kEXfezptgst8eHzo3Yt2M39kVhGCRTRTsOY=

    install_sh: >-
        set +x;
        if [ "$version" != "$default_version" ] ; then
        echo "'$PWD/Solution/BuildTools/UnAuthorize.bat' $serialVDraw11" >>/cmd/ci_defer;
        "$PWD/Solution/BuildTools/Authorize.bat" $serialVDraw11 || True; 
        fi;    

    # HINT - Authorize || True = see issue: https://ulm-dev.zuken.com/Team-Prometheus/CICD-Backlog/issues/370
    # HINT: Available variables: REPO_RELEASE_NAME, REPO_TAG_NAME

    build_sh: >-
        set +x;
        echo add "interactive_shell" - command to break and hook into the ci-container manually;
        echo clearing nuget package cache...;
        unset NUGET_PACKAGES;
        echo building Setup solution ...; 
        set -x;
        dotnet build "$solution_file" --no-incremental -nowarn:MSB3246 -p:Configuration=Release -p:Platform=x64 -p:Version="$(version)" -p:maxcpucount=1 -m -bl:./build.binlog -v:m | tee ./build.log;
        find "$(setup_bin_folder)" -type f -name '*.msi' -exec cp -at "$(setup_bundle_bin_folder)" {} +;
        cp "$(license_file)" "$(bin_folder)";
    deploy_zstart_version: $(version)
# HINT2: im deploy_zstart kann man nur ein Directory angeben. Einzelne Dateien sind eigentlich ein Fehler (der nicht gehÃ¤ndelt wird).
    deploy_zstart: $(bin_folder)
    deploy_zstart_setup: $(setup_bundle_bin_folder)/

#    deploy_sh: >-
#        interactive_shell;

# HINT: The part behind "artifacts_*" defines the text which is shown to the user as the badge-text in git
# HINT2: currently articats collecting is not working when build was aborted. This is a bug and will be fixed soon so that artifacts are collected always
    artifacts_A: >-
        ./build.log;
        ./build.binlog;
        $(setup_bundle_bin_folder)/*.msi;
        $(setup_bundle_bin_folder)/*.exe;
        $(bin_folder)/E3.HarnessAnalyzer.deps.json;
        $(license_file);
        /c/log.txt;
