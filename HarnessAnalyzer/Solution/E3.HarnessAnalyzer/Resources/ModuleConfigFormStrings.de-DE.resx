<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abbreviation_ColCaption" xml:space="preserve">
    <value>Abkürzung</value>
  </data>
  <data name="Activate_CtxtMnu_Caption" xml:space="preserve">
    <value>Aktiviere Modulkonfiguration</value>
  </data>
  <data name="ActiveConfig_CtxtMnu_Caption" xml:space="preserve">
    <value>Aktive Konfiguration...</value>
  </data>
  <data name="AddNewConfigName_InputBoxTitle" xml:space="preserve">
    <value>Füge neue Modulkonfiguration hinzu</value>
  </data>
  <data name="AddNew_CtxtMnu_Caption" xml:space="preserve">
    <value>Füge neue Modulkonfiguration hinzu</value>
  </data>
  <data name="AllConfig_CtxtMnu_Caption" xml:space="preserve">
    <value>Alle Konfigurationen...</value>
  </data>
  <data name="ChooseConfigName_InputBoxPrompt" xml:space="preserve">
    <value>Wähle Modulkonfigurationsnamen:</value>
  </data>
  <data name="ConfigCannotBeDel_Msg" xml:space="preserve">
    <value>Modulkonfigurationen aus der KBL können nicht gelöscht werden!</value>
  </data>
  <data name="ConfigCannotBeMod_Msg" xml:space="preserve">
    <value>Modulkonfigurationen aus der KBL können nicht verändert werden!</value>
  </data>
  <data name="ConfigCannotBeRen_Msg" xml:space="preserve">
    <value>Modulkonfigurationen aus der KBL sowie die Standardkonfiguration können nicht umbenannt werden!</value>
  </data>
  <data name="Copy2_String" xml:space="preserve">
    <value>{0}_Kopie</value>
  </data>
  <data name="Copy_CtxtMnu_Caption" xml:space="preserve">
    <value>Kopiere Modulkonfiguration</value>
  </data>
  <data name="Copy_String" xml:space="preserve">
    <value>_Kopie</value>
  </data>
  <data name="CustomConfigCannotBeDel_Msg" xml:space="preserve">
    <value>'&lt;Standard&gt;' Modulkonfiguration kann nicht gelöscht werden!</value>
  </data>
  <data name="CustomCopy2_ModConfigName" xml:space="preserve">
    <value>Standard_Kopie</value>
  </data>
  <data name="CustomCopy_ModConfigName" xml:space="preserve">
    <value>&lt;Standard&gt;_Kopie</value>
  </data>
  <data name="DelActConfig_Msg" xml:space="preserve">
    <value>Lösche die aktive Modulkonfiguration?</value>
  </data>
  <data name="Delete_CtxtMnu_Caption" xml:space="preserve">
    <value>Lösche Modulkonfiguration</value>
  </data>
  <data name="DelSelConfig_Msg" xml:space="preserve">
    <value>Lösche die selektierte Modulkonfiguration?</value>
  </data>
  <data name="Description_ColCaption" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="DeselectAll_CtxtMnu_Caption" xml:space="preserve">
    <value>Wähle alle Module ab</value>
  </data>
  <data name="ErrorExportConfig_Msg" xml:space="preserve">
    <value>Beim Export der Modulkonfiguration(en) ist ein Fehler aufgetreten!{0}{1}.</value>
  </data>
  <data name="ErrorImportConfig_Msg" xml:space="preserve">
    <value>Beim Import der Modulkonfiguration(en) ist ein Fehler aufgetreten!{0}{1}.</value>
  </data>
  <data name="ExportConfigSuccess_Msg" xml:space="preserve">
    <value>Der Export der Modulkonfiguration(en) wurde erfolgreich abgeschlossen!</value>
  </data>
  <data name="ExportConfigToFile_Title" xml:space="preserve">
    <value>Exportiere Modulkonfiguration(en)...</value>
  </data>
  <data name="Id_ColCaption" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="ImportConfigFile_Title" xml:space="preserve">
    <value>Importiere Modulkonfiguration(en)...</value>
  </data>
  <data name="ImportConfigSuccess_Msg" xml:space="preserve">
    <value>Die Modulkonfiguration(en) wurden erfolgreich importiert!</value>
  </data>
  <data name="ImportConfig_Msg" xml:space="preserve">
    <value>Die Modulkonfigurationen passen nicht zum geöffneten HCV. Die Leitungssatz-Teilenummer oder die Version sind unterschiedlich! Soll der Import trotzdem durchgeführt werden?</value>
  </data>
  <data name="LoadConfigFile_LogMsg" xml:space="preserve">
    <value>Modulkonfigurationsdatei '{0}' um {1}{2} geladen.</value>
  </data>
  <data name="ModuleNotExist_LogMsg" xml:space="preserve">
    <value>Das Modul '{0}' aus der importierten Konfiguration exisitiert nicht im Dokument {1}.</value>
  </data>
  <data name="NewConfig_InputBoxDefResp" xml:space="preserve">
    <value>Neue Modulkonfiguration</value>
  </data>
  <data name="OfFamily_ColCaption" xml:space="preserve">
    <value>Familie</value>
  </data>
  <data name="OverrideNames_Msg" xml:space="preserve">
    <value>Sollen Anwender-Modulkonfigurationen mit gleichem Namen überschrieben werden?</value>
  </data>
  <data name="PartNumber_ColCaption" xml:space="preserve">
    <value>Teilenummer</value>
  </data>
  <data name="Paste_CtxtMnu_Caption" xml:space="preserve">
    <value>Einfügen aus Zwischenablage</value>
  </data>
  <data name="ReadOnlyConfig_Tooltip" xml:space="preserve">
    <value>Nicht änderbare Modulkonfiguration aus der KBL</value>
  </data>
  <data name="RegExInvalid_Msg" xml:space="preserve">
    <value>Der reguläre Ausdruck aus der Konfigurationsdatei zur Modulerkennung ist nicht gültig! Es wird die Voreinstellung verwendet.</value>
  </data>
  <data name="RenameConfig_InputBoxTitle" xml:space="preserve">
    <value>Umbenennung der Modulkonfiguration</value>
  </data>
  <data name="Rename_CtxtMnu_Caption" xml:space="preserve">
    <value>Benenne Modulkonfiguration um</value>
  </data>
  <data name="SelConfigNameExists_Msg" xml:space="preserve">
    <value>Der Modulkonfigurationsname exisitiert schon oder ist vom System belegt!</value>
  </data>
  <data name="SelConfigNameIsEmpty_Msg" xml:space="preserve">
    <value>Der Modulkonfigurationsname darf nicht leer sein!</value>
  </data>
  <data name="SelConfigNameTooLong_Msg" xml:space="preserve">
    <value>Der Modulkonfigurationsname ist länger als 50 Zeichen!</value>
  </data>
  <data name="SelectAll_CtxtMnu_Caption" xml:space="preserve">
    <value>Selektiere alle Module</value>
  </data>
  <data name="TempDefConfig_Tooltip" xml:space="preserve">
    <value>Temporär angelegte und änderbare Modulkonfiguration in dem aktiven HCV</value>
  </data>
  <data name="ToggleVisibility_CtxtMnu_Caption" xml:space="preserve">
    <value>Blende die Sichtbarkeit von KBL-Modulkonfigurationen ein bzw. aus</value>
  </data>
  <data name="UserConfig_CtxtMnu_Caption" xml:space="preserve">
    <value>Anwenderdefinierte Konfiguration(en)...</value>
  </data>
  <data name="UserDefConfig_Tooltip" xml:space="preserve">
    <value>Anwenderdefinierte und änderbare Modulkonfiguration</value>
  </data>
  <data name="UserDefModConifg_Tooltip" xml:space="preserve">
    <value>Anwenderdefinierte und änderbare Modulkonfiguration</value>
  </data>
</root>