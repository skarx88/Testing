<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddColor_InputBoxTitle" xml:space="preserve">
    <value>Add color code</value>
  </data>
  <data name="AddDiaRange_InputBoxTitle" xml:space="preserve">
    <value>Add bundle diameter range</value>
  </data>
  <data name="AddInlIdent_InputBoxPrompt" xml:space="preserve">
    <value>Add inliner identifier</value>
  </data>
  <data name="ColorCode_ColCaption" xml:space="preserve">
    <value>Color code</value>
  </data>
  <data name="DelBundleDiaRange_Msg" xml:space="preserve">
    <value>Delete bundle diameter range {0} - {1}?</value>
  </data>
  <data name="DelColorCode_Msg" xml:space="preserve">
    <value>Delete wire color code '{0}'?</value>
  </data>
  <data name="Delete_CtxtMnu_Caption" xml:space="preserve">
    <value>Delete entry</value>
  </data>
  <data name="DelInlIdent_Msg" xml:space="preserve">
    <value>Delete inliner identifier linked to KBL connector object property '{0}'?</value>
  </data>
  <data name="DiaHasInvalidFormat_Msg" xml:space="preserve">
    <value>Selected bundle diameter range has an invalid input format or already exists!</value>
  </data>
  <data name="EnterColor_InputBoxPrompt" xml:space="preserve">
    <value>Enter new color code:</value>
  </data>
  <data name="EnterDiaRange_InputBoxPrompt" xml:space="preserve">
    <value>Enter new bundle diameter range:</value>
  </data>
  <data name="FileListCleared_Msg" xml:space="preserve">
    <value>Recent file list successfully cleared!</value>
  </data>
  <data name="IdentCriteria_ColCaption" xml:space="preserve">
    <value>Identification criteria</value>
  </data>
  <data name="KBLPropName_ColCaption" xml:space="preserve">
    <value>KBL property name</value>
  </data>
  <data name="MaxDia_ColCaption" xml:space="preserve">
    <value>Max. diameter [mm²]</value>
  </data>
  <data name="MinDia_ColCaption" xml:space="preserve">
    <value>Min. diameter [mm²]</value>
  </data>
  <data name="MinMaxDia_InputBoxDefResp" xml:space="preserve">
    <value>[Min. diameter here] - [Max. diameter here]</value>
  </data>
  <data name="NoFurtherConnPropAvailable_Msg" xml:space="preserve">
    <value>No further KBL connector object properties available for defining new identification criteria!</value>
  </data>
  <data name="ResetColorCodes_Msg" xml:space="preserve">
    <value>Reset color codes to their default values?</value>
  </data>
  <data name="ResetDiaRanges_Msg" xml:space="preserve">
    <value>Reset bundle diameters to their default ranges?</value>
  </data>
  <data name="ResetInlIdent_Msg" xml:space="preserve">
    <value>Reset inliner identifiers to their default values?</value>
  </data>
  <data name="SelColorExists_Msg" xml:space="preserve">
    <value>Selected color code already exists!</value>
  </data>
  <data name="SelKBLConn_InputBoxTitle" xml:space="preserve">
    <value>Select available KBL connector object property:</value>
  </data>
  <data name="EnglishLang_ListItem" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="GermanLang_ListItem" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="ResetDataTableSettings_Msg" xml:space="preserve">
    <value>Changing the UI language does not affect the data table appearance settings. Would you like to reset the data table settings?</value>
  </data>
  <data name="RestartApp_Msg" xml:space="preserve">
    <value>Please restart the application to apply all UI language changes.</value>
  </data>
  <data name="IdentifierGroupSuffixEditOnlyInlinerAllowedErrorMessage" xml:space="preserve">
    <value>Only valid on inline connectors!</value>
  </data>
  <data name="NotEditableForSpliceOrEyeletMessage" xml:space="preserve">
    <value>Not editable for type splice or eyelet!</value>
  </data>
  <data name="ComponentIdentifierConditionsDeletePrompt" xml:space="preserve">
    <value>Do you really want to delete the selected conditions of the {0}-identifier ?</value>
  </data>
  <data name="ResetComponentIdent_Msg" xml:space="preserve">
    <value>Reset component and inliner identifiers for schematics view to their default values?</value>
  </data>
  <data name="ConditionForStandardIdentifierNotAllowed_Msg" xml:space="preserve">
    <value>Adding conditions for a standard identifier is not allowed!</value>
  </data>
  <data name="ComponentIdentifierMultipleConditionsDeletePrompt" xml:space="preserve">
    <value>Do you really want to delete the selected conditions of the {0}-identifiers ?</value>
  </data>
  <data name="PleaseCloseAllOpenedDocumentsToApplyChange_Msg" xml:space="preserve">
    <value>Please close all opened documents to apply changes!</value>
  </data>
  <data name="AddUSSpliceIdent_InputBoxPrompt" xml:space="preserve">
    <value>Add ultrasonic splice identifier</value>
  </data>
  <data name="DelUSSpliceIdent_Msg" xml:space="preserve">
    <value>Delete ultrasonic splice identifier linked to KBL connector object property '{0}'?</value>
  </data>
  <data name="ResetUSSpliceIdent_Msg" xml:space="preserve">
    <value>Reset ultrasonic splice identifiers to their default values?</value>
  </data>
  <data name="PhysicalLength" xml:space="preserve">
    <value>physical length</value>
  </data>
  <data name="VirtualLength" xml:space="preserve">
    <value>virtual length</value>
  </data>
  <data name="LogVerbosity_Silent" xml:space="preserve">
    <value>Silent</value>
  </data>
  <data name="LogVerbosity_ErrorsOnly" xml:space="preserve">
    <value>Only Errors</value>
  </data>
  <data name="LogVerbosity_WarningsAndErrors" xml:space="preserve">
    <value>Warnings and errors</value>
  </data>
  <data name="AddEyeletIdent_InputBoxPrompt" xml:space="preserve">
    <value>Add eyelet identifier</value>
  </data>
  <data name="AddSpliceIdent_InputBoxPrompt" xml:space="preserve">
    <value>Add splice identifier</value>
  </data>
  <data name="DelEyeletIdent_Msg" xml:space="preserve">
    <value>Delete eyelet identifier linked to KBL connector object property '{0}'?</value>
  </data>
  <data name="DelSpliceIdent_Msg" xml:space="preserve">
    <value>Delete splice identifier linked to KBL connector object property '{0}'?</value>
  </data>
  <data name="RegExInvalid" xml:space="preserve">
    <value>The  condition definition {0} is invalid!</value>
  </data>
  <data name="uckAutomaticTooltips" xml:space="preserve">
    <value>Use automatic tooltips</value>
  </data>
  <data name="MaxMoveTolerance" xml:space="preserve">
    <value>* Distance value must be between 1 and {0}</value>
  </data>
</root>