<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefBPDim_Label" xml:space="preserve">
    <value>  Lege Basispunkt der Bemaßung in der Zeichnung fest</value>
  </data>
  <data name="DefBPText_Label" xml:space="preserve">
    <value>  Lege Basispunkt des Texts in der Zeichnung fest</value>
  </data>
  <data name="DefCPArc_Label" xml:space="preserve">
    <value>  Lege Zentrum des Bogens in der Zeichnung fest</value>
  </data>
  <data name="DefCPCircle_Label" xml:space="preserve">
    <value>  Lege Zentrum des Kreises in der Zeichnung fest</value>
  </data>
  <data name="DefEAngArc_Label" xml:space="preserve">
    <value>  Lege Endwinkel des Bogens in der Zeichung fest</value>
  </data>
  <data name="DefECRect_Label" xml:space="preserve">
    <value>  Lege End-Ecke des Rechtecks in der Zeichnung fest</value>
  </data>
  <data name="DefEPArrow_Label" xml:space="preserve">
    <value>  Lege Endpunkt des Pfeils in der Zeichnung fest</value>
  </data>
  <data name="DefEPLine_Label" xml:space="preserve">
    <value>  Lege Endpunkt der Linie in der Zeichnung fest</value>
  </data>
  <data name="DefNxtVertexPntPolyline_Label" xml:space="preserve">
    <value>  Lege nächsten Zwischenpunkt der Polylinie in der Zeichnug fest</value>
  </data>
  <data name="DefOffsetDim_Label" xml:space="preserve">
    <value>  Lege den Abstand der Bemaßung in der Zeichnung fest</value>
  </data>
  <data name="DefRadArc_Label" xml:space="preserve">
    <value>  Lege den Radius des Bogens in der Zeichnung fest</value>
  </data>
  <data name="DefRadCircle_Label" xml:space="preserve">
    <value>  Lege den Radius des Kreises in der Zeichnung fest</value>
  </data>
  <data name="DefRotText_Label" xml:space="preserve">
    <value>  Lege die Rotation des Textes in der Zeichnung fest</value>
  </data>
  <data name="DefRPDim_Label" xml:space="preserve">
    <value>  Lege den Referenzpunkt der Bemaßung in der Zeichnung fest</value>
  </data>
  <data name="DefSAngArc_Label" xml:space="preserve">
    <value>  Lege den Anfangswinkel des Bogens in der Zeichnung fest</value>
  </data>
  <data name="DefSCRect_Label" xml:space="preserve">
    <value>  Lege die Anfangs-Ecke des Rechtecks in der Zeichnung fest</value>
  </data>
  <data name="DefSPArrow_Label" xml:space="preserve">
    <value>  Lege den Anfangspunkt des Pfeils in der Zeichnung fest</value>
  </data>
  <data name="DefSPLine_Label" xml:space="preserve">
    <value>  Lege den Anfangspunkt der Polylinie in der Zeichnung fest</value>
  </data>
  <data name="DefTxtString_Label" xml:space="preserve">
    <value>  Lege den Texteintrag fest</value>
  </data>
  <data name="ErrorExportRedlining_Msg" xml:space="preserve">
    <value>Beim Export der grafischen Anmerkungen als Grafik ist ein Fehler aufgetreten!{0}{1}.</value>
  </data>
  <data name="ExportRedliningSuccess_Msg" xml:space="preserve">
    <value>Die grafischen Anmerkungen wurde erfolgreich exportiert!</value>
  </data>
  <data name="ExportRedliningToFile_Title" xml:space="preserve">
    <value>Exportiere grafische Anmerkungen als...</value>
  </data>
  <data name="FailedLoadRedlining_Msg" xml:space="preserve">
    <value>Die grafische Anmerkungen konnten nicht geladen werden!</value>
  </data>
  <data name="ProblemExportRedlining_Msg" xml:space="preserve">
    <value>Beim Exportieren der grafischen Anmerkungen ist ein Problem aufgetreten!</value>
  </data>
  <data name="SaveChanges_Msg" xml:space="preserve">
    <value>Änderungen speichern?</value>
  </data>
</root>