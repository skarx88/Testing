<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DocStatMachine_ImportMemolistFailed" xml:space="preserve">
    <value>Import des Memolisteneintrags '{0}' am {1} Objekt '{2}' ist fehlgeschlagen: Die KBL Id des zugehörigen Objektes existiert nicht auf dem Dokument.</value>
  </data>
  <data name="DocStatMachine_ImportQMStampFailed" xml:space="preserve">
    <value>Import des QM-Stempels mit Ref-Nr. '{0}' ist fehlgeschlagen: Die KBL Ids der zugehörigen Objekte existieren nicht auf dem Dokument.</value>
  </data>
  <data name="DocStatMachine_ImportRedliningFailed" xml:space="preserve">
    <value>Import der Anmerkung '{0}' am {1} Objekt '{2}' ist fehlgeschlagen: Die KBL Id des zugehörigen Objektes existiert nicht auf dem Dokument.</value>
  </data>
  <data name="DraftConv_FinishedLoadDrawing" xml:space="preserve">
    <value>Laden der Skizze um {0} abgeschlossen...</value>
  </data>
  <data name="DraftConv_LoadingDrawing" xml:space="preserve">
    <value>Lade die Skizze...</value>
  </data>
  <data name="DraftConv_NoSegmentVertexInKBL" xml:space="preserve">
    <value>In der KBL-Datei sind keine grafischen Information am Segment oder Knoten enthalten!</value>
  </data>
  <data name="DraftConv_ProblemLoadAccessories" xml:space="preserve">
    <value>Beim Laden der Zubehörteile für die Skizze ist ein Problem aufgetreten: {0}</value>
  </data>
  <data name="DraftConv_ProblemLoadDrawing" xml:space="preserve">
    <value>Beim Laden der der Zeichnung für die Skizze ist ein Fehler aufgetreten: {0}</value>
  </data>
  <data name="DraftConv_ProblemLoadFixings" xml:space="preserve">
    <value>Beim Laden der Befestigungsteile für die Skizze ist ein Problem aufgetreten: {0}</value>
  </data>
  <data name="DraftConv_ProblemLoadSegments" xml:space="preserve">
    <value>Beim Laden der Segmente für die Skizze ist ein Problem aufgetreten: {0}</value>
  </data>
  <data name="DraftConv_ProblemLoadVertices" xml:space="preserve">
    <value>Beim Laden der Knoten für die Skizze ist ein Problem aufgetreten: {0}</value>
  </data>
  <data name="DraftConv_StartLoadDrawing" xml:space="preserve">
    <value>Start des Ladevorgangs der Skizzze um {0}...</value>
  </data>
  <data name="InitMng_InitLic" xml:space="preserve">
    <value>Initialisiere Lizenz...</value>
  </data>
  <data name="SvgConv_CancelledLoadDrawing" xml:space="preserve">
    <value>Laden der SVG-Datei '{0}' um {1} abgebrochen...</value>
  </data>
  <data name="SvgConv_FinishedLoadDrawing" xml:space="preserve">
    <value>Laden der SVG-Datei '{0}' um {1} abgeschlossen...</value>
  </data>
  <data name="SvgConv_LoadingDrawing" xml:space="preserve">
    <value>Lade SVG-Datei '{0}'...</value>
  </data>
  <data name="SvgConv_LoadProblem" xml:space="preserve">
    <value>Beim Laden der SVG-Zeichnung ist ein Fehler aufgetreten! {0}.</value>
  </data>
  <data name="SvgConv_ProblemCheckSVG" xml:space="preserve">
    <value>Bei der Konsistenzprüfung der SVG-Datei ist eine Problem aufgetreten: {0}</value>
  </data>
  <data name="SvgConv_ProblemLoadSVG" xml:space="preserve">
    <value>Beim Laden der SVG-Datei '{1}' ist ein Fehler in Zeile '{0}' aufgetreten: {2}</value>
  </data>
  <data name="SvgConv_StartLoadFile" xml:space="preserve">
    <value>Start des Ladevorgangs der SVG-Datei '{0}' um {1}...</value>
  </data>
  <data name="SvgConv_ValidationFailsGroup" xml:space="preserve">
    <value>Fehler bei der Validierung der SVG-Datei '{0}': Es existiert ein Element '{1}' in Zeile {2} welches keiner Gruppe zugeordnet ist (Es wird nicht dargestellt)!</value>
  </data>
  <data name="SvgConv_ValidationFailsText" xml:space="preserve">
    <value>Warnung bei der Validierung der SVG-Datei '{0}': Es existiert ein Element '{1}' in Zeile {2} ('{3}') welches weiße Füllfarbe besitzt bzw. transparent gesetzt wurde (Es kann nicht erkennbar sein)!</value>
  </data>
</root>